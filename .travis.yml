language: python
sudo: false
env:
  global:
    # our GITHUB_TOKEN
    secure: acCojrLAQFpC5thBOVfOV77mxFATlWGVtuKB1e27jp/0kQx6RILu29OO9A0SzTMOxjGbI8G4pQy6tLDuNukoG5Rl6vBvHSEGS+naInBSgF7zc0zC9+YJK7gaJc5qZ6jnURsi84+bIEz//RP5WN5Yz3QsJ4t9QZ3zwbBESTdhA9M=

# install dependencies and pelita
install:
- pip install pytest-cov codecov coveralls
- pip install -e .
- python -c "import zmq; print('Using pyzmq {} and zmq {}.'.format(zmq.pyzmq_version(), zmq.zmq_version()))"

stages:
- test
- test tournament
- test pelita template
- name: deploy
  if: branch = master

jobs:
  include:
  - &test
    stage: test
    script:
    - python -m pytest --cov=pelita -v test/
    - python -m pelita.scripts.pelita_main --progress
    - pelita --null --rounds 100 --filter small
    python: 3.5
  - <<: *test
    python: 3.6
  - <<: *test
    python: 3.7
    dist: xenial
    sudo: true
    # push coverage
    after_success:
    - codecov
    - coveralls

  - stage: test tournament
    script: pelita-tournament --non-interactive --viewer null
    python: 3.6
  - script: pelita-tournament --non-interactive --viewer null
    python: 3.7
    dist: xenial
    sudo: true

  - stage: test pelita template
    script: git clone https://github.com/ASPP/pelita_template && ( cd pelita_template/ && python -m pytest . )
    python: 3.6
  - script: git clone https://github.com/ASPP/pelita_template && ( cd pelita_template/ && python -m pytest . )
    python: 3.7
    dist: xenial
    sudo: true

  - stage: deploy
    python: 3.7
    dist: xenial
    sudo: true

    script: skip
    # generate sphinx documentation in doc/build/html/
    before_deploy:
    - python -m pip install sphinx
    - git fetch --unshallow
    - git fetch --tags
    - . ./build-docs.sh
    # deploy docs
    deploy:
      provider: pages
      local-dir: doc/build/html/
      skip-cleanup: true
      github-token: $GITHUB_TOKEN
      keep-history: true
      on:
        branch: master
        python: 3.7
        repo: ASPP/pelita
